                 Regression Log for Tue Sep 26 14:15:54 1995

significant digits test: 1 = 1, 3 = 3, 32 = 32, 0 = 0

bcd to string test = +1234567890987654
          expected:  +1234567890987654
bcd to string test = +123456789098765.4
          expected:  +123456789098765.4
bcd to string test = +1234567890.987654
          expected:  +1234567890.987654

bcd to string test  = +123456789
          expected:   +123456789
bcd to string test  = +12345678.9
          expected:   +12345678.9
bcd to string test  = +123.456789
          expected:   +123.456789

bcd to string test  = +0
          expected:   +0
bcd to string test  = +0.0
          expected:   +0.0
bcd to string test  = +0.0
          expected:   +0.0

bcd to string test  = +2
          expected:   +2
bcd to string test  = +0.2
          expected:   +0.2
bcd to string test  = +0.000002
          expected:   +0.000002

shift test 1234567890987654 shifted left 1 = +00000000000000012345678909876540 cc: 0
   expected                                = +00000000000000012345678909876540 cc: 0

shift test 1234567890987654 shifted left 2 = +00000000000001234567890987654000 cc: 0
   expected                                = +00000000000001234567890987654000 cc: 0

shift test 1234567890987654 shifted left 3 = +00000000001234567890987654000000 cc: 0
   expected                                = +00000000001234567890987654000000 cc: 0

shift test 1234567890987654 shfted left 13 = +00000000001234567890987654000000 cc: 16
   expected                                = +00000000001234567890987654000000 cc: 16

shift test 1234567890987654 shifted rt 1 = +00000000000123456789098765400000 cc: 0
   expected                              = +00000000000123456789098765400000 cc: 0

shift test 1234567890987654 shifted rt 2 = +00000000000001234567890987654000 cc: 0
   expected                              = +00000000000001234567890987654000 cc: 0

shift test 1234567890987654 shifted rt 5 = +00000000000000000012345678909876 cc: 0
   expected                              = +00000000000000000012345678909876 cc: 0

shift test 12345678909876 sh rt 4 & rnd  = +00000000000000000000001234567891 cc: 0
   expected                              = +00000000000000000000001234567891 cc: 0

shift test 12345678909876 sh rt 4 & rnd  = +00000000000000000000000000123457 cc: 0
   expected                              = +00000000000000000000000000123457 cc: 0

shift test 12345678909876 sh rt 5 & rnd  = +00000000000000000000000000000001 cc: 0
   expected                              = +00000000000000000000000000000001 cc: 0

shift test 12345678909876 sh lt 31       = +10000000000000000000000000000000 cc: 0
   expected                              = +10000000000000000000000000000000 cc: 0

coupled shift s2 > s1,   s1 = +00000000000000000000000000654321 cc: 0
                expected s1 = +00000000000000000000000000654321 cc: 0
                         s2 = +00000000000000000001234567890987 cc: 0
                expected s2 = +00000000000000000001234567890987 cc: 0

coupled shift s2 > s1,   s1 = +00000000000000000000000000090987 cc: 0
                expected s1 = +00000000000000000000000000090987 cc: 0
                         s2 = +00000000000000000000000012345678 cc: 0
                expected s2 = +00000000000000000000000012345678 cc: 0

coupled shift s2 > s1,   s1 = +00000000000000000000000000005678 cc: 0
                expected s1 = +00000000000000000000000000005678 cc: 0
                         s2 = +00000000000000000000000000001234 cc: 0
                expected s2 = +00000000000000000000000000001234 cc: 0

coupled shift s2 > s1,   s1 = +00000000000000000000000000000234 cc: 0
                expected s1 = +00000000000000000000000000000234 cc: 0
                         s2 = +00000000000000000000000000000001 cc: 0
                expected s2 = +00000000000000000000000000000001 cc: 0

logical test 1 < 2   = 1
expected             = 1 

logical test 1 > 2   = 0
expected             = 0 

logical test 1 = 2   = 0
expected             = 0 

logical test 2 < 1   = 0
expected             = 0 

logical test 2 > 1   = 1
expected             = 1 

logical test 2 = 1   = 0
expected             = 0 

logical test 1 < 12  = 1
expected             = 1 

logical test 1 > 12  = 0
expected             = 0 

logical test 1 = 12  = 0
expected             = 0 

logical test 12 < 1  = 0
expected             = 0 

logical test 12 > 1  = 1
expected             = 1 

logical test 12 = 1  = 0
expected             = 0 

logical test -1 < 2  = 1
expected             = 1 

logical test -1 > 2  = 0
expected             = 0 

logical test -1 = 2  = 0
expected             = 0 

logical test 2 < -1  = 0
expected             = 0 

logical test -1 != 2  = 1
expected              = 1 

logical test 2 != -1  = 1
expected              = 1 

logical test 2 != 2   = 0
expected              = 0 

logical test 2 > -1  = 1
expected             = 1 

logical test 2 = -1  = 0
expected             = 0 

logical test d1 = d1 = 1
expected             = 1 

logical test 0 = -0  = 1
expected             = 1 

logical test -0 = 0  = 1
expected             = 1 

logical test 0 = 0   = 1
expected             = 1 

logical test -0 = -0 = 1
expected             = 1 

divide test 8765432109876/24687 = +00000000000000000000000355062669 cc: 0
expected                        = +00000000000000000000000355062669 cc: 0

divide tst 92732081006447/45263 = +00000000000000000000002048739169 cc: 0
expected                        = +00000000000000000000002048739169 cc: 0

divide test 8765432109876/75237 = +00000000000000000000000116504274 cc: 0
expected                        = +00000000000000000000000116504274 cc: 0

divide test 1/24687             = +00000000000000000000000000000000 cc: 0
expected                        = +00000000000000000000000000000000 cc: 0

   test 10000000000000000/24687 = +00000000000000000000405071495118 cc: 0
expected                        = +00000000000000000000405071495118 cc: 0

   test 10000000000000000/3     = +00000000000000003333333333333333 cc: 0
expected                        = +00000000000000003333333333333333 cc: 0

   test 10000000000000000/6     = +00000000000000001666666666666666 cc: 0
expected                        = +00000000000000001666666666666666 cc: 0

   test 10000000000000000/7     = +00000000000000001428571428571428 cc: 0
expected                        = +00000000000000001428571428571428 cc: 0

 div test 22000000000000000/7   = +00000000000000031428571428571428 cc: 0
expected                        = +00000000000000031428571428571428 cc: 0

modulus test 24687%1000         = +00000000000000000000000000000687 cc: 0
expected                        = +00000000000000000000000000000687 cc: 0

divide by zero test 75237/0     = +00000000000000000000000000075237 cc: 16
expected                        = +00000000000000000000000000075237 cc: 16

divide d1/d1 test               = +00000000000000000000000000000001 cc: 0
expected                        = +00000000000000000000000000000001 cc: 0

re-subtract test: 12345 - 12346 = -00000000000000000000000000000001 cc: 0
expected                        = -00000000000000000000000000000001 cc: 0
 reverse opnds:   12346 - 12345 = +00000000000000000000000000000001 cc: 0
expected                        = +00000000000000000000000000000001 cc: 0

8599238847786248452455563809*45263       = +00008599238847786248452455563809 cc: 15
                               expected:   +00008599238847786248452455563809 cc: 15

748345987654321 x 288834570200345        = +00216148191705288491573574940745 cc: 0
                               expected:   +00216148191705288491573574940745 cc: 0

748345987654321 x 288834570200345 x 10   = +02161481917052884915735749407450 cc: 0
                               expected:   +02161481917052884915735749407450 cc: 0

748345987654321 x 288834570200345 x 100  = +21614819170528849157357494074500 cc: 0
                               expected:   +21614819170528849157357494074500 cc: 0

748345987654321 x 288834570200345 x 1000 = +00216148191705288491573574940745 cc: 16
                               expected:   +00216148191705288491573574940745 cc: 16

123456789 x 123456789 x 123456789        = +00000001881676371789154860897069 cc: 0
                               expected:   +00000001881676371789154860897069 cc: 0

123456789 x 123456789 x 123456789 x 123456789 = +00000001881676371789154860897069 cc: 16
                                    expected:   +00000001881676371789154860897069 cc: 16

                                        2 x 2 = +00000000000000000000000000000004 cc: 0
                                    expected:   +00000000000000000000000000000004 cc: 0

                                       2 x 12 = +00000000000000000000000000000024 cc: 0
                                    expected:   +00000000000000000000000000000024 cc: 0

                                2 x 123456789 = +00000000000000000000000246913578 cc: 0
                                    expected:   +00000000000000000000000246913578 cc: 0

                                123456789 x 2 = +00000000000000000000000246913578 cc: 0
                                    expected:   +00000000000000000000000246913578 cc: 0

 4096 x 2 = +00000000000000000000000000008192 cc: 0
expected:   +00000000000000000000000000008192 cc: 0

 2 x 4096 = +00000000000000000000000000008192 cc: 0
expected:   +00000000000000000000000000008192 cc: 0

 2 x 12 x 4096 = +00000000000000000000000000098304 cc: 0
expected:        +00000000000000000000000000098304 cc: 0

    aa = +99999999999999999999999999999999 cc: 0
    bb = +00000000000000000000000000000001 cc: 0
 aa-bb = +99999999999999999999999999999998 cc: 0
expected:+99999999999999999999999999999998 cc: 0
 aa+bb = +00000000000000000000000000000000 cc: 1
expected:+00000000000000000000000000000000 cc: 1

     e = +00000000000000000000000000000000 cc: 0
     f = +00000000000000000000000000000000 cc: 0
 e + f = +00000000000000000000000000000000 cc: 0
expected:+00000000000000000000000000000000 cc: 0
 e - f = +00000000000000000000000000000000 cc: 0
expected:+00000000000000000000000000000000 cc: 0

     g = -00000000000000000000000000000000 cc: 0
     h = +00000000000000000000000000000000 cc: 0
 g + h = +00000000000000000000000000000000 cc: 0
expected:+00000000000000000000000000000000 cc: 0
 g - h = +00000000000000000000000000000000 cc: 0
expected:+00000000000000000000000000000000 cc: 0

     w = +00000000000000000000000000000001 cc: 0
     x = -00000000000000000000000000000001 cc: 0
 w + x = +00000000000000000000000000000000 cc: 0
expected:+00000000000000000000000000000000 cc: 0
 w - x = +00000000000000000000000000000002 cc: 0
expected:+00000000000000000000000000000002 cc: 0

     y = -00000000000000000000000000000002 cc: 0
     z = +00000000000000000000000000000300 cc: 0
 y + z = +00000000000000000000000000000298 cc: 0
expected:+00000000000000000000000000000298 cc: 0
 y - z = -00000000000000000000000000000302 cc: 0
expected:-00000000000000000000000000000302 cc: 0

numa =      +00000000000000001234567890987654 cc: 0
numb =      +00000000000000000000000000004321 cc: 0
numa+numb = +00000000000000001234567890991975 cc: 0
expected:   +00000000000000001234567890991975 cc: 0
numb+numa = +00000000000000001234567890991975 cc: 0
expected:   +00000000000000001234567890991975 cc: 0

numa =      +00000000000000001234567890987654 cc: 0
numc =      -00000000000000000000000024681357 cc: 0
numa+numc = +00000000000000001234567866306297 cc: 0
expected:   +00000000000000001234567866306297 cc: 0
numc+numa = +00000000000000001234567866306297 cc: 0
expected:   +00000000000000001234567866306297 cc: 0

numb =      +00000000000000000000000000004321 cc: 0
numc =      -00000000000000000000000024681357 cc: 0
numb+numc = -00000000000000000000000024677036 cc: 0
expected:   -00000000000000000000000024677036 cc: 0
numc+numb = -00000000000000000000000024677036 cc: 0
expected:   -00000000000000000000000024677036 cc: 0

numa =      +00000000000000001234567890987654 cc: 0
numb =      +00000000000000000000000000004321 cc: 0
numa-numb = +00000000000000001234567890983333 cc: 0
expected:   +00000000000000001234567890983333 cc: 0
numb-numa = -00000000000000001234567890983333 cc: 0
expected:   -00000000000000001234567890983333 cc: 0

numa =      +00000000000000001234567890987654 cc: 0
numc =      -00000000000000000000000024681357 cc: 0
numa-numc = +00000000000000001234567915669011 cc: 0
expected:   +00000000000000001234567915669011 cc: 0
numc-numa = -00000000000000001234567915669011 cc: 0
expected:   -00000000000000001234567915669011 cc: 0

numb =      +00000000000000000000000000004321 cc: 0
numc =      -00000000000000000000000024681357 cc: 0
numb-numc = +00000000000000000000000024685678 cc: 0
expected:   +00000000000000000000000024685678 cc: 0
numc-numb = -00000000000000000000000024685678 cc: 0
expected:   -00000000000000000000000024685678 cc: 0

